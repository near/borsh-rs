---
source: borsh-derive/src/internals/deserialize/enums/mod.rs
assertion_line: 287
expression: pretty_print_syn_str(&actual).unwrap()
---
impl<K: Ord, V> borsh::de::BorshDeserialize for C<K, V>
where
    K: borsh::de::BorshDeserialize,
    V: borsh::de::BorshDeserialize,
{
    fn deserialize_reader<__R: borsh::io::Read>(
        reader: &mut __R,
    ) -> ::core::result::Result<Self, borsh::io::Error> {
        let tag = <u8 as borsh::de::BorshDeserialize>::deserialize_reader(reader)?;
        <Self as borsh::de::EnumExt>::deserialize_variant::<_, u8>(reader, tag)
    }
}
impl<K: Ord, V> borsh::de::EnumExt for C<K, V>
where
    K: borsh::de::BorshDeserialize,
    V: borsh::de::BorshDeserialize,
{
    fn deserialize_variant<
        __R: borsh::io::Read,
        Tag: borsh::BorshDeserialize + ::core::fmt::Debug + Eq
            + ::core::convert::TryInto<u16> + ::core::convert::TryInto<u8> + Copy,
    >(
        reader: &mut __R,
        variant_tag: Tag,
    ) -> ::core::result::Result<Self, borsh::io::Error> {
        use ::core::convert::TryInto;
        let mut return_value = if TryInto::<(u8)>::try_into(variant_tag)
            .map_err(|_| {
                return borsh::io::Error::new(
                    borsh::io::ErrorKind::InvalidData,
                    borsh::__private::maybestd::format!(
                        "Unexpected variant tag: {:?}", variant_tag
                    ),
                );
            })? == 0u8
        {
            C::C3(
                borsh::BorshDeserialize::deserialize_reader(reader)?,
                borsh::BorshDeserialize::deserialize_reader(reader)?,
            )
        } else if TryInto::<(u8)>::try_into(variant_tag)
            .map_err(|_| {
                return borsh::io::Error::new(
                    borsh::io::ErrorKind::InvalidData,
                    borsh::__private::maybestd::format!(
                        "Unexpected variant tag: {:?}", variant_tag
                    ),
                );
            })? == 1u8
        {
            C::C4 {
                x: borsh::BorshDeserialize::deserialize_reader(reader)?,
                y: third_party_impl::deserialize_third_party(reader)?,
            }
        } else {
            return Err(
                borsh::io::Error::new(
                    borsh::io::ErrorKind::InvalidData,
                    borsh::__private::maybestd::format!(
                        "Unexpected variant tag: {:?}", variant_tag
                    ),
                ),
            )
        };
        Ok(return_value)
    }
}
