---
source: borsh-derive/src/internals/schema/structs/mod.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
impl<T> borsh::BorshSchema for A<T>
where
    T: borsh::BorshSchema,
{
    fn declaration() -> borsh::schema::Declaration {
        let params = borsh::__private::maybestd::vec![
            < T as borsh::BorshSchema > ::declaration()
        ];
        format!(r#"{}<{}>"#, "A", params.join(", "))
    }
    fn add_definitions_recursively(
        definitions: &mut borsh::__private::maybestd::collections::BTreeMap<
            borsh::schema::Declaration,
            borsh::schema::Definition,
        >,
    ) {
        let fields = borsh::schema::Fields::UnnamedFields(
            borsh::__private::maybestd::vec![< T as borsh::BorshSchema > ::declaration()],
        );
        let definition = borsh::schema::Definition::Struct {
            fields,
        };
        if borsh::schema::add_definition(
            <Self as borsh::BorshSchema>::declaration(),
            definition,
            definitions,
        ) {
            <T as borsh::BorshSchema>::add_definitions_recursively(definitions);
        }
    }
}

