---
source: borsh-derive/src/internals/serialize/enums/mod.rs
expression: pretty_print_syn_str(&actual).unwrap()
---
impl<K: Key, V, U> borsh::ser::BorshSerialize for A<K, V, U>
where
    V: Value,
    K: borsh::ser::BorshSerialize,
    V: borsh::ser::BorshSerialize,
{
    fn serialize<W: borsh::io::Write>(
        &self,
        writer: &mut W,
    ) -> ::core::result::Result<(), borsh::io::Error> {
        let variant_idx: u8 = match self {
            A::B { .. } => 0u8,
            A::C(..) => 1u8,
        };
        writer.write_all(&variant_idx.to_le_bytes())?;
        match self {
            A::B { x, y, .. } => {
                borsh::BorshSerialize::serialize(x, writer)?;
                borsh::BorshSerialize::serialize(y, writer)?;
            }
            A::C(id0, _id1) => {
                borsh::BorshSerialize::serialize(id0, writer)?;
            }
        }
        Ok(())
    }
}

